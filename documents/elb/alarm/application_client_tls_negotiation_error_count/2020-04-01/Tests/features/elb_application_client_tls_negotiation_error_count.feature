@elb @integration @alarm
Feature: Alarm Setup - application elastic load-balancer ClientTLSNegotiationErrorCount

  Scenario: Create elb:alarm:application_client_tls_negotiation_error_count:2020-04-01 based on ClientTLSNegotiationErrorCount metric normal case
    Given self-signed ssl certificate is created and cache arn as "ssl_certificate_arn"
      | certificate_bytes | "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU0Q0NRQy9nc2s4QS9UZ1VqQU5CZ2txaGtpRzl3MEJBUXNGQURCRk1Rc3dDUVlEVlFRR0V3SlYKVXpFWU1CWUdBMVVFQ2d3UFgwUmxkbVZzYjNCdFpXNTBJRU5CTVJ3d0dnWURWUVFEREJNcUxtVnNZaTVoYldGNgpiMjVoZDNNdVkyOXRNQjRYRFRJeE1EZ3hNREUyTURRME4xb1hEVEl5TURneE1ERTJNRFEwTjFvd1JURUxNQWtHCkExVUVCaE1DVlZNeEdEQVdCZ05WQkFvTUQxOUVaWFpsYkc5d2JXVnVkQ0JEUVRFY01Cb0dBMVVFQXd3VEtpNWwKYkdJdVlXMWhlbTl1WVhkekxtTnZiVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQgpBTThuckpEdExIY1RGdm1zaTEzQldaS3VvRlJFMS96eTF0bzJSTlhZUVpTS09tRDJaNXROalJjS3dWUmFwRkcwCnU2VGFYWldxdU80aDdFUnhHa2dJbnVmRUZBdDRCTHIzQWJYZloyREdObU1jamludCtTYW9EdnNmbWpEZnBKVjUKRGZrN2h0NnhKa0Rqd1NOQWFIU21RRUF4MnNldkFOZk85aFpzYzdiUXpGUWV0d29TVm5OckNlZGNrVFFjcGNiegpqb05OUk1ZNzR1OWNPdkc3UUFib3FBOS9LM2lKdjNidVN0WitrckdUMnFwSzFXL0FsaVc4ZXJTMWp6OUM0SGF2CkY2dnVyNXZHSGdsbUdkUlVMTmIxdnZDMVFqNm9oZ3JDRDFka2lUajhaUVJrVHFyR0Z6WmpxTDhsQXV5c2xOTmQKT0x2bkt2S3AxRlZXL2I2OGRTUXpLb2NDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFaTDJqcVFnRgpDVUc5SDVjNUQ1WGhRb005Yk1CRjhHL2l3NGJ0T1lTTTBERUt6TEpGT2JwUG1adldDSDdFTWFXTkpPS0E2RXphCldQS1hwbHBZVERJaUtxYTg4a3B0cDA4Y2FsNDhoeEg5K080bm9kbEliR3h0UklYQzJuMlp3Qk4wWXNnd28zVEwKSERVMklEZ3padUEzZ1lCaEc1dTI5dWhJTUorVHZsZmtjU3d6OENiamRKYysyL1NMN2pJT2NpZU12ZTh6cHdMTAp0VmFsS01vT2sxN0I1N09ES2VweVZQWDA2ZCt1Z3F5cCs0MWNXRTRhemRkWUhvNXhrMjFUK0dqTm9TS2lwUHllCnYzcllIV3pMdi9DOVhNWTlvSjN3b0YwamZ2MVUxWXNiWDlKdkNSejdGNTZMTmRlL3pienRuY2RHdmFQV1pVbEkKMTBDWis0ZkV5REJTVVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg|
      | private_key_bytes | "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBenllc2tPMHNkeE1XK2F5TFhjRlprcTZnVkVUWC9QTFcyalpFMWRoQmxJbzZZUFpuCm0wMk5Gd3JCVkZxa1ViUzdwTnBkbGFxNDdpSHNSSEVhU0FpZTU4UVVDM2dFdXZjQnRkOW5ZTVkyWXh5T0tlMzUKSnFnTyt4K2FNTitrbFhrTitUdUczckVtUU9QQkkwQm9kS1pBUURIYXg2OEExODcyRm14enR0RE1WQjYzQ2hKVwpjMnNKNTF5Uk5CeWx4dk9PZzAxRXhqdmk3MXc2OGJ0QUJ1aW9EMzhyZUltL2R1NUsxbjZTc1pQYXFrclZiOENXCkpieDZ0TFdQUDBMZ2RxOFhxKzZ2bThZZUNXWVoxRlFzMXZXKzhMVkNQcWlHQ3NJUFYyU0pPUHhsQkdST3FzWVgKTm1Pb3Z5VUM3S3lVMDEwNHUrY3E4cW5VVlZiOXZyeDFKRE1xaHdJREFRQUJBb0lCQUhvM05QZFlCampHT1hMYQpHbXNZN0lpK24vYTNteG93QnhROG1rWHp6VlVlYkN6U2t2T3NRRVpNNFJ5c1VXK25DbUhMTnhWYTRMb1ZwM2dGCnBuVERLVVVoaUpYdm5CTFdNZHNrVDdCbm9LUytyeDBMdWtmVk5PbHhqcDJ4QkQvdmFKQVhUNDNJeEFIYW5STDQKSitoU1FXdmVQZTQ3VUdzQ1BtdWlWbTZRSjB5a3RZUVdSZjVFd245VUZCeGJ2aWJoMmtTNU93UDRZS2hyRXRjWApCVTBGZlFtOGZaNUNVcDlNVGNhVjd3ZnYwdDhhVjhLZmtwd3Z5ajZDaFgreGo0WmZGdG1lNE5EdlRKVjJVZ1dnCmlIWSt6YkZhN282eXVRYTlZdTQ4NFZGUFZ0YWkyTWVmU3A2RmRyMllWVmNHb25GUCtuOGJRRDVJYWVEMzBjamsKSXFmMmZma0NnWUVBL0loVnNTT3FULzBCOWJaY2tOSk9ZajdHQkhteWJuMU5kRTV0SkRLVGxaM0ttZTdQd2NoLwpjWWpIUlQ3MStSRHptMGhOZlgwZUd2V1MvWGhXVUsvd2lvbnJaRWdHblBWRFBnaHlXc09SRU11MlFMUGo0UVhsCm9TZmI2VWhlTXlxRHJ1K2tySHR3eXdCeTk0OXB4UGZ5OFBDc1Q3VWttTFVTeXFpSjZXNU1mRDBDZ1lFQTBmL1YKc3ZER3prdFNKL2N1RXA3MDNseUtEMmlLZ3BONEREZDJyZkRacWM0R1ZCM3E1cDkvSDJudndXaUlzRk9BVXcvNwpqMGdhSDdGOW9sL1pMSWoxdjdnU2k4djc5UGVZQWNTZk1YSWNkemRDWGsrZFQ2dnJORGkyTEdPdnB6d0pGUHcvClVuK3RXNEtMSHIrRjVqQ2pOeWxTZjJKTlh1UzVBSGJ6UmFkQzJoTUNnWUVBNy9hUkR3RW4vbGdadTZXczhnU1YKYlMvZk5ETjhCUmZXT05XcFNrTXhFSFBmS0VUUWNJQ1g4WWVhYTBkM3JsT1lXSTdzNjNpdjJjaFBBOEtNcXFGMAp2Z0J1aUYwVXc2TWZZVnZmWmpYOXErc1haUVpMWFBFZ2tmRnhPNHlEenJUd2FwUFhjL3JjWkZvcDVPb0hCSjdqCjRHV2lKeCtuQmVEU1dYYXJqZ0E4ZDdVQ2dZRUF3ZURyRVN2T3dFTTE5SVAyMjJZNk9ObEM5WHJVOWp6a1JwTW0KVk96YWFEVTREbzBZaEJlWkxBMklOdzRsdEhWRE1teTlHY205cEtrZmpydmpLNFMvTG1QcGEzdkdnS0hlaXpOVwpyalhtSmdLMG1aSHpjTTBPZDhZc0dzdG1Mb1gwOUpUMmVWbzdXUk1yRWhaTXJ2c1VsU2JuYllmNldyUGNRWnVRCmVpdzBRbFVDZ1lCL25MSHZpYVlJcXpMSGNnRVB3djRuUUZlekxkdDE4K2kxZFJTblYxMWNWZmh6QnN1MTFUSlgKTWxxNndTUWU4bmFMcWlkclAycWNjNStaNEpScUYxSVVnd0pCWDR6VTU4b2RkS29JZ1F5SExLSVluSGNUQ0dCcwppREJwZkF0QW04M2RXOEozcnRsdDVTOTRXUStFU2lsbmpNNm0yQ3ExdTdmYm5lK0RqV2VGTGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=" |

    And the cloud formation templates as integration test resources
      | CfnTemplatePath                                                                         | ResourceType | VPC                      | Subnet1                                            | Subnet2                                            | Subnet3                                              | VPCCidr                    | SSLCertificateArn             |
      | resource_manager/cloud_formation_templates/shared/VPC.yml                               | SHARED       |                          |                                                    |                                                    |                                                      |                            |                               |
      | resource_manager/cloud_formation_templates/ApplicationLoadBalancerWithHttpsTemplate.yml | ON_DEMAND    | {{cfn-output:VPC>VPCId}} | {{cfn-output:VPC>PrivateSubnetWithoutInternetOne}} | {{cfn-output:VPC>PrivateSubnetWithoutInternetTwo}} | {{cfn-output:VPC>PrivateSubnetWithoutInternetThree}} | {{cfn-output:VPC>VPCCidr}} | {{cache:ssl_certificate_arn}} |
      | resource_manager/cloud_formation_templates/shared/SnsForAlarms.yml                      | SHARED       |                          |                                                    |                                                    |                                                      |                            |                               |

    When alarm "elb:alarm:application_client_tls_negotiation_error_count:2020-04-01" is installed
      | alarmId    | SNSTopicARN                       | ApplicationELBArn                                                              | Threshold | MaxTimeMinutes |
      | under_test | {{cfn-output:SnsForAlarms>Topic}} | {{cfn-output:ApplicationLoadBalancerWithHttpsTemplate>ApplicationELBFullName}} | 1000      | 1              |
    And invoke lambda "{{cfn-output:ApplicationLoadBalancerWithHttpsTemplate>ProxyLambdaArn}}" with parameters
      | host             | {{cfn-output:ApplicationLoadBalancerWithHttpsTemplate>ApplicationELBUrl}} |
      | path             | /                                                                         |
      | schema           | https                                                                     |
      | request_count    | 3                                                                         |
      | request_interval | 1                                                                         |
    And sleep for "20" seconds
    Then assert metrics for all alarms are populated
    And wait until alarm {{alarm:under_test>AlarmName}} becomes OK within 180 seconds, check every 15 seconds

  Scenario: Create elb:alarm:application_client_tls_negotiation_error_count:2020-04-01 based on ClientTLSNegotiationErrorCount metric state.ALARM case
    Given the cached input parameters
      | ssl_certificate_arn                                                                 |
      | arn:aws:acm:eu-west-1:435978235099:certificate/bef22097-8526-498a-b30b-54bfc631559d |

    And the cloud formation templates as integration test resources
      | CfnTemplatePath                                                                         | ResourceType | VPC                      | Subnet1                                            | Subnet2                                            | Subnet3                                              | VPCCidr                    | SSLCertificateArn             |
      | resource_manager/cloud_formation_templates/shared/VPC.yml                               | SHARED       |                          |                                                    |                                                    |                                                      |                            |                               |
      | resource_manager/cloud_formation_templates/shared/SnsForAlarms.yml                      | SHARED       |                          |                                                    |                                                    |                                                      |                            |                               |
      | resource_manager/cloud_formation_templates/ApplicationLoadBalancerWithHttpsTemplate.yml | ON_DEMAND    | {{cfn-output:VPC>VPCId}} | {{cfn-output:VPC>PrivateSubnetWithoutInternetOne}} | {{cfn-output:VPC>PrivateSubnetWithoutInternetTwo}} | {{cfn-output:VPC>PrivateSubnetWithoutInternetThree}} | {{cfn-output:VPC>VPCCidr}} | {{cache:ssl_certificate_arn}} |

    When alarm "elb:alarm:application_client_tls_negotiation_error_count:2020-04-01" is installed
      | alarmId    | SNSTopicARN                       | ApplicationELBArn                                                              | Threshold | MaxTimeMinutes |
      | under_test | {{cfn-output:SnsForAlarms>Topic}} | {{cfn-output:ApplicationLoadBalancerWithHttpsTemplate>ApplicationELBFullName}} | 1         | 1              |
    And invoke lambda "{{cfn-output:ApplicationLoadBalancerWithHttpsTemplate>ProxyLambdaArn}}" with parameters
      | host             | {{cfn-output:ApplicationLoadBalancerWithHttpsTemplate>ApplicationELBUrl}} |
      | path             | /                                                                         |
      | schema           | https                                                                     |
      | request_count    | 3                                                                         |
      | request_interval | 1                                                                         |
    And sleep for "20" seconds
    Then assert metrics for all alarms are populated
    And wait until alarm {{alarm:under_test>AlarmName}} becomes ALARM within 180 seconds, check every 15 seconds
