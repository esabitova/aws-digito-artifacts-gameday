#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
description: "SOP - Create backup"
schemaVersion: "0.3"
assumeRole: '{{ AutomationAssumeRole }}'
parameters:
  FileSystemId:
    type: String
    description: (Required) The EFS ID.
  BackupVaultName:
    type: String
    description: (Required) The name of a logical container where backups are stored.
  BackupJobIamRoleArn:
    type: String
    description: (Required) IAM role ARN with policy AWSBackupServiceRolePolicyForBackup used to create the target recovery point.
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
outputs:
  - CreateBackupJob.RecoveryPointArn
  - CreateBackupJob.BackupJobId
  - OutputRecoveryTime.RecoveryTime
mainSteps:
  - name: RecordStartTime
    action: 'aws:executeScript'
    outputs:
      - Name: StartTime
        Selector: $.Payload
        Type: String
    inputs:
      Runtime: python3.7
      Handler: start_time
      Script: |-
        SCRIPT_PLACEHOLDER::common_util.imports
        SCRIPT_PLACEHOLDER::common_util.start_time

  - name: GetFileSystemArn
    action: 'aws:executeAwsApi'
    outputs:
      - Name: FileSystemArn
        Selector: '$.FileSystems[0].FileSystemArn'
        Type: String
    inputs:
      Service: efs
      Api: DescribeFileSystems
      FileSystemId: '{{ FileSystemId }}'

  - name: CreateBackupJob
    action: 'aws:executeAwsApi'
    outputs:
      - Name: BackupJobId
        Selector: '$.BackupJobId'
        Type: String
      - Name: RecoveryPointArn
        Selector: '$.RecoveryPointArn'
        Type: String
    inputs:
      Service: backup
      Api: startBackupJob
      BackupVaultName: '{{ BackupVaultName }}'
      ResourceArn: '{{ GetFileSystemArn.FileSystemArn }}'
      IamRoleArn: '{{ BackupJobIamRoleArn }}'
      IdempotencyToken: '{{ global:DATE_TIME }}'

  - name: VerifyBackupJobStatus
    action: 'aws:waitForAwsResourceProperty'
    maxAttempts: 10
    timeoutSeconds: 60
    inputs:
      Service: backup
      Api: DescribeBackupJob
      BackupJobId: '{{ CreateBackupJob.BackupJobId }}'
      PropertySelector: '$.State'
      DesiredValues: ['COMPLETED']

  - name: OutputRecoveryTime
    action: 'aws:executeScript'
    outputs:
      - Name: RecoveryTime
        Selector: '$.Payload'
        Type: Integer
    inputs:
      Runtime: python3.7
      Handler: recovery_time
      Script: |-
        SCRIPT_PLACEHOLDER::common_util.imports
        SCRIPT_PLACEHOLDER::common_util.recovery_time
      InputPayload:
        StartTime: '{{ RecordStartTime.StartTime }}'
