#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
description: "Restores to the latest snapshot and attaches to the given EC2"
schemaVersion: "0.3"
assumeRole: "{{ AutomationAssumeRole }}"
outputs:
  - OutputRecoveryTime.RecoveryTime
  - GetRecoveryPoint.RecoveryPoint
parameters:
  VolumeId:
    type: String
    description: (Required) VolumeId
  RecoveryPointDateTime:
    type: String
    description: (Optional) The recovery point in time in format YYYY-MM-DDTHH:MM:SSZ
    allowedPattern: "^latest$|^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d[0-5]\\d|Z)$"
    default: "latest"
  InstanceId:
    type: String
    description: (Optional) The instance id to attach EBS volume (non-root)
    default: ""
  CopyTags:
    type: Boolean
    description: (Optional) Indicates to Tags should be copied from the source volume
    default: True
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
mainSteps:
  - name: RecordStartTime
    action: 'aws:executeScript'
    outputs:
      - Name: StartTime
        Selector: $.Payload
        Type: String
    inputs:
      Runtime: python3.7
      Handler: start_time
      Script: |-
        SCRIPT_PLACEHOLDER::common_util.imports
        SCRIPT_PLACEHOLDER::common_util.start_time

  - name: PerformRecovery
  # 1.Query all available snapshots [boto3.describe_snapshots] (use pagination)
  #   Parameters:
  #     Filters=Name=volume-id,Values=params.VolumeId
  #   Take .Snapshots collection 
  # if params.RecoveryPointDateTime != 'latest'
  #   parse params.RecoveryPointDateTime
  #   filter snapshots before params.RecoveryPointDateTime
  #   get the latest from them
  # else
  #   get the latest snapshot

  # 1.1. if CopyTags == True
  # Call [boto3.describe_volumes] (use pagination)
  #   Parameters:
  #     VolumeIds=[params.VolumeId]
  #   Take .Volumes[0].Tags[] collection 

  # 2. Create new EBS volume using [boto3.create_volume]
  #   Parameters:
  #     SnapshotId=(snapshotId from the step #1)
  #     TagSpecifications={'ResourceType':'volume', 'Tags': (tags from step1.1)}
  #   Return VolumeId (hereafter NewVolumeId)

  # 2.1 Wait Volume status 'available'
  # call [boto3.describe_volumes]
  #   Parameters:
  #     VolumeId=NewVolumeId (from #2)
  #   Take .Volumes[].State

  # 3. If InstanceId not empty
  # Call [boto3.attach_volume]
  #   Parameters:
  #     VolumeId=NewVolumeId (from #2)
  #     InstanceId=params.InstanceId
  

  - name: GetRecoveryPoint 
  # return StartTime of restored snapshot [boto3.describe_snapshots]

  - name: OutputRecoveryTime
    action: 'aws:executeScript'
    outputs:
      - Name: RecoveryTime
        Selector: $.Payload
        Type: Integer
    inputs:
      Runtime: python3.7
      Handler: recovery_time
      Script: |-
        SCRIPT_PLACEHOLDER::common_util.imports
        SCRIPT_PLACEHOLDER::common_util.recovery_time
      InputPayload:
        StartTime: '{{ RecordStartTime.StartTime }}'