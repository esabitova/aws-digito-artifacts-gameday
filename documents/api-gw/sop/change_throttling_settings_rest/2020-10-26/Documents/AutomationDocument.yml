#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
description: "Change throttling settings for REST API Gateway"
schemaVersion: "0.3"
assumeRole: "{{AutomationAssumeRole}}"
parameters:
  RestApiGwUsagePlanId:
    type: String
    description: (Required) The ID of REST API Gateway usage plan to be modified
  RestApiGwThrottlingRate:
    type: String
    description: (Required) The value of throttling rate (requests per second)
  RestApiGwThrottlingBurst:
    type: String
    description: (Required) The value of throttling burst rate (requests per second)
  RestApiGwStageName:
    type: String
    description: (Optional) The name of the Stage which throttling settings should be applied to. If not set, setting will be applied on the Usage Plan level
    default: ''
  RestApiGwId:
    type: String
    description: (Optional) The ID of REST API Gateway. Required if Stage name is provided. Otherwise, it will be ignored
    default: ''
  RestApiGwResourcePath:
    type: String
    description: (Optional) The Resource Path which throttling settings should be applied to (e.g. /Customers/Accounts/). Can be set as "*" (all resources). if RestApiGwStageName is not provided then this parameter is ignored
    default: '*'
  RestApiGwHttpMethod:
    type: String
    description: (Optional) The HTTP method which throttling settings should be applied to (e.g. GET, POST, PUT, and etc.). Can be set as "*" (all http methods). if RestApiGwStageName is not provided then this parameter is ignored
    default: '*'
  ForceExecution:
    type: Boolean
    description: (Optional) If True, validations will be skipped.
    default: false
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
outputs:
  - "SetThrottlingConfiguration.RestApiGwThrottlingRateNewValue"
  - "SetThrottlingConfiguration.RestApiGwThrottlingBurstNewValue"
  - "ValidateInputs.RestApiGwThrottlingRateOriginalValue"
  - "ValidateInputs.RestApiGwThrottlingBurstOriginalValue"
  - "OutputRecoveryTime.RecoveryTime"
mainSteps:
  - name: RecordStartTime
    action: aws:executeScript
    outputs:
      - Name: StartTime
        Selector: '$.Payload'
        Type: String
    inputs:
      Runtime: python3.7
      Handler: start_time
      Script: |-
        SCRIPT_PLACEHOLDER::common_util.imports
        SCRIPT_PLACEHOLDER::common_util.start_time

  - name: CheckIfForceExecutionIsSet
    action: aws:branch
    inputs:
      Choices:
        - NextStep: SetThrottlingConfiguration
          Variable: '{{ ForceExecution }}'
          BooleanEquals: true
        - NextStep: ValidateInputs
          Variable: '{{ ForceExecution }}'
          BooleanEquals: false
      Default:
        ValidateInputs

  - name: ValidateInputs
    description: Checks if throttling rate or burst going to be changed on more than 50%. If so, raise an error
    action: aws:executeScript
    outputs:
      - Name: RestApiGwThrottlingRateOriginalValue
        Selector: '$.Payload.OriginalRateLimit'
        Type: Integer
      - Name: RestApiGwThrottlingBurstOriginalValue
        Selector: '$.Payload.OriginalBurstLimit'
        Type: Integer
    inputs:
      Runtime: python3.7
      Handler: validate_throttling_config
      InputPayload:
        RestApiGwUsagePlanId: '{{ RestApiGwUsagePlanId }}'
        RestApiGwId: '{{ RestApiGwId }}'
        RestApiGwStageName: '{{ RestApiGwStageName }}'
        RestApiGwResourcePath: '{{ RestApiGwResourcePath }}'
        RestApiGwHttpMethod: '{{ RestApiGwHttpMethod }}'
        RestApiGwThrottlingRate: '{{ RestApiGwThrottlingRate }}'
        RestApiGwThrottlingBurst: '{{ RestApiGwThrottlingBurst }}'
      Script: |-
        SCRIPT_PLACEHOLDER::apigw_utils.imports
        SCRIPT_PLACEHOLDER::apigw_utils.get_usage_plan
        SCRIPT_PLACEHOLDER::apigw_utils.assert_https_status_code_200
        SCRIPT_PLACEHOLDER::apigw_utils.validate_throttling_config

  - name: SetThrottlingConfiguration
    action: aws:executeScript
    description: Update throttling settings for REST API Gateway
    outputs:
      - Name: RestApiGwThrottlingRateNewValue
        Selector: '$.Payload.RateLimit'
        Type: Integer
      - Name: RestApiGwThrottlingBurstNewValue
        Selector: '$.Payload.BurstLimit'
        Type: Integer
    inputs:
      Runtime: python3.7
      Handler: set_throttling_config
      InputPayload:
        RestApiGwUsagePlanId: '{{ RestApiGwUsagePlanId }}'
        RestApiGwId: '{{ RestApiGwId }}'
        RestApiGwStageName: '{{ RestApiGwStageName }}'
        RestApiGwResourcePath: '{{ RestApiGwResourcePath }}'
        RestApiGwHttpMethod: '{{ RestApiGwHttpMethod }}'
        RestApiGwThrottlingRate: '{{ RestApiGwThrottlingRate }}'
        RestApiGwThrottlingBurst: '{{ RestApiGwThrottlingBurst }}'
      Script: |-
        SCRIPT_PLACEHOLDER::apigw_utils.imports
        SCRIPT_PLACEHOLDER::apigw_utils.assert_https_status_code_200
        SCRIPT_PLACEHOLDER::apigw_utils.get_service_quota
        SCRIPT_PLACEHOLDER::apigw_utils.update_usage_plan
        SCRIPT_PLACEHOLDER::apigw_utils.set_throttling_config

  - name: OutputRecoveryTime
    action: aws:executeScript
    outputs:
      - Name: RecoveryTime
        Selector: '$.Payload'
        Type: Integer
    inputs:
      Runtime: python3.7
      Handler: recovery_time
      InputPayload:
        StartTime: '{{ RecordStartTime.StartTime }}'
      Script: |-
        SCRIPT_PLACEHOLDER::common_util.imports
        SCRIPT_PLACEHOLDER::common_util.recovery_time
