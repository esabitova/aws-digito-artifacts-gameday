#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
description: "Test REST API Gateway with binding to VPC behavior when security groups are misconfigured. Since API VPC endpoints is not accessible due to certain security groups we can expect bringing down the number of API calls and corresponding alarms fired"
schemaVersion: "0.3"
assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  RestApiGwId:
    type: String
    description: (Required) RestApiGwId
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
  ApiGwCountAlarmName:
    type: String
    description: (Required) Alarm which should be red after injection of the failure and green after the rollback process in the end of the test.
  SecurityGroupIdListToUnassign:
    type: StringList
    description: (Optional) The list of Security Group Ids that should be unassigned from the the API. If not provided, all Security Groups will be unassigned from attached VPC endpoints
    maxItems: 15
    default: [ ]
  IsRollback:
    type: String
    description: >-
      (Optional) Run rollback step of the given previous execution (parameter `PreviousExecutionId`). Can be either true or false.
    default: 'false'
  PreviousExecutionId:
    type: String
    description: >-
      (Optional) Previous execution id for which resources need to be cleaned up.
    default: ''
mainSteps:
  - name: CheckIsRollback
    action: aws:branch
    inputs:
      Choices:
        - NextStep: GetInputsFromPreviousExecution
          Variable: '{{ IsRollback }}'
          EqualsIgnoreCase: 'true'
      Default: AssertAlarmToBeGreenBeforeTest

  - name: GetInputsFromPreviousExecution
    action: aws:executeScript
    outputs:
      - Name: RestApiGwId
        Selector: '$.Payload.RestApiGwId[0]'
        Type: String
    inputs:
      Runtime: python3.7
      Handler: get_inputs_from_ssm_execution
      InputPayload:
        ExecutionId: '{{ PreviousExecutionId }}'
      Script: |-
        SCRIPT_PLACEHOLDER::ssm_execution_util.imports

        SCRIPT_PLACEHOLDER::ssm_execution_util.get_inputs_from_ssm_execution

  - name: AssertInputsFromPreviousExecution
    action: aws:branch
    inputs:
      Choices:
        - NextStep: PrepareRollbackOfPreviousExecution
          Variable: '{{ GetInputsFromPreviousExecution.RestApiGwId }}'
          StringEquals: '{{ RestApiGwId }}'
    isEnd: true

  - name: PrepareRollbackOfPreviousExecution
    action: aws:executeScript
    outputs:
      - Name: VpcEndpointsSecurityGroupsMappingOriginalValue
        Selector: $.Payload.VpcEndpointsSecurityGroupsMappingOriginalValue[0]
        Type: String
    inputs:
      Runtime: python3.7
      Handler: get_output_from_ssm_step_execution
      InputPayload:
        ExecutionId: '{{ PreviousExecutionId }}'
        StepName: 'BackupCurrentExecution'
        ResponseField: 'VpcEndpointsSecurityGroupsMappingOriginalValue'
      Script: |-
        SCRIPT_PLACEHOLDER::ssm_execution_util.imports

        SCRIPT_PLACEHOLDER::ssm_execution_util.get_output_from_ssm_step_execution

  - name: RollbackPreviousExecution
    onCancel: step:TriggerRollback
    action: aws:executeScript
    description: Rollback VPC endpoint(s) configuration for REST API Gateway
    inputs:
      Runtime: python3.7
      Handler: update_endpoint_security_group_config
      InputPayload:
        VpcEndpointsSecurityGroupsMapping: '{{ PrepareRollbackOfPreviousExecution.VpcEndpointsSecurityGroupsMappingOriginalValue }}'
        Action: 'ReplaceWithOriginalSg'
      Script: |-
        SCRIPT_PLACEHOLDER::apigw_utils.imports

        SCRIPT_PLACEHOLDER::apigw_utils.update_endpoint_security_group_config
    isEnd: true

  - name: AssertAlarmToBeGreenBeforeTest
    action: aws:waitForAwsResourceProperty
    maxAttempts: 1
    timeoutSeconds: 600
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
        - '{{ApiGwCountAlarmName}}'
      PropertySelector: '$.MetricAlarms[0].StateValue'
      DesiredValues: [ 'OK' ]

  - name: BackupCurrentExecution
    action: aws:executeScript
    description: Backup security group configuration for REST API Gateway
    outputs:
      - Name: VpcEndpointsSecurityGroupsMappingOriginalValue
        Selector: '$.Payload.VpcEndpointsSecurityGroupsMappingOriginalValue'
        Type: String
    inputs:
      Runtime: python3.7
      Handler: get_endpoint_security_group_config
      InputPayload:
        RestApiGwId: '{{ RestApiGwId }}'
        SecurityGroupIdListToUnassign: '{{ SecurityGroupIdListToUnassign }}'
      Script: |-
        SCRIPT_PLACEHOLDER::apigw_utils.imports

        SCRIPT_PLACEHOLDER::apigw_utils.get_endpoint_security_group_config

  - name: InjectFailure
    onFailure: step:RollbackCurrentExecution
    onCancel: step:TriggerRollback
    action: aws:executeScript
    description: Remove security group(s) from VPC endpoint(s) configuration for REST API Gateway
    inputs:
      Runtime: python3.7
      Handler: update_endpoint_security_group_config
      InputPayload:
        VpcEndpointsSecurityGroupsMapping: '{{ BackupCurrentExecution.VpcEndpointsSecurityGroupsMappingOriginalValue }}'
        Action: 'ReplaceWithDummySg'
      Script: |-
        SCRIPT_PLACEHOLDER::apigw_utils.imports

        SCRIPT_PLACEHOLDER::apigw_utils.update_endpoint_security_group_config

  - name: AssertAlarmToBeRed
    onFailure: step:RollbackCurrentExecution
    onCancel: step:TriggerRollback
    action: aws:waitForAwsResourceProperty
    maxAttempts: 1
    timeoutSeconds: 600
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
        - '{{ApiGwCountAlarmName}}'
      PropertySelector: '$.MetricAlarms[0].StateValue'
      DesiredValues: [ 'ALARM' ]

  - name: RollbackCurrentExecution
    onCancel: step:TriggerRollback
    action: aws:executeScript
    description: Rollback VPC endpoint(s) configuration for REST API Gateway
    maxAttempts: 5
    inputs:
      Runtime: python3.7
      Handler: update_endpoint_security_group_config
      InputPayload:
        VpcEndpointsSecurityGroupsMapping: '{{ BackupCurrentExecution.VpcEndpointsSecurityGroupsMappingOriginalValue }}'
        Action: 'ReplaceWithOriginalSg'
      Script: |-
        SCRIPT_PLACEHOLDER::apigw_utils.imports

        SCRIPT_PLACEHOLDER::apigw_utils.update_endpoint_security_group_config

  - name: AssertAlarmToBeGreen
    action: aws:waitForAwsResourceProperty
    maxAttempts: 1
    timeoutSeconds: 600
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
        - "{{ApiGwCountAlarmName}}"
      PropertySelector: "$.MetricAlarms[0].StateValue"
      DesiredValues: [ "OK" ]
    isEnd: true

  - name: TriggerRollback
    action: 'aws:executeScript'
    onFailure: Abort
    outputs:
      - Name: RollbackExecutionId
        Selector: $.Payload.RollbackExecutionId
        Type: String
    inputs:
      Runtime: python3.7
      Handler: start_rollback_execution
      InputPayload:
        ExecutionId: '{{automation:EXECUTION_ID}}'
      Script: |-
        SCRIPT_PLACEHOLDER::ssm_execution_util.imports

        SCRIPT_PLACEHOLDER::ssm_execution_util.start_rollback_execution
    isEnd: true
