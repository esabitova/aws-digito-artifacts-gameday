#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
description: 'SOP - Scaling down'
schemaVersion: '0.3'
assumeRole: '{{ AutomationAssumeRole }}'
outputs:
  - BackupDbInstancesMetadata.BackupDbClusterInstancesCountValue
  - BackupDbClusterInstancesCount.DbClusterInstancesNumber
  - VerifyCurrentInstancesCount.CurrentInstancesNumber
  - OutputRecoveryTime.RecoveryTime
parameters:
  DBClusterIdentifier:
    type: String
    description: (Required) DocDb Cluster Identifier
  DBInstanceReplicaIdentifier:
    type: String
    description: (Required) DocDb Replica Identifier
  AutomationAssumeRole:
    type: String
    description: >-
      (Required) The ARN of the role that allows Automation to perform
      the actions on your behalf. If no role is specified, Systems Manager Automation
      uses your IAM permissions to run this document.

mainSteps:
  - name: RecordStartTime
    action: 'aws:executeScript'
    outputs:
      - Name: StartTime
        Selector: $.Payload
        Type: String
    inputs:
      Runtime: python3.7
      Handler: start_time
      Script: |-
        SCRIPT_PLACEHOLDER::common_util.imports
        SCRIPT_PLACEHOLDER::common_util.start_time

  - name: BackupDbInstancesMetadata
    action: aws:executeAwsApi
    description: Backup current DbClusterInstances value
    inputs:
      Service: docdb
      Api: DescribeDBClusters
      Filters:  
      - Name: 'db-cluster-id'
        Values: 
        - '{{ DBClusterIdentifier }}'
    outputs:
      - Name: BackupDbClusterInstancesCountValue
        Selector: $.DBClusters[0].DBClusterMembers
        Type: MapList

  - name: BackupDbClusterInstancesCount
    action: aws:executeScript
    description: Backup DocDb cluster instances count value
    onFailure: Abort
    outputs:
      - Name: DbClusterInstancesNumber
        Selector: $.Payload.DbClusterInstancesNumber
        Type: Integer
    inputs:
      Runtime: python3.7
      Handler: count_cluster_instances
      InputPayload:
        DbClusterInstances: '{{ BackupDbInstancesMetadata.BackupDbClusterInstancesCountValue }}'
      Script: |-
        SCRIPT_PLACEHOLDER::docdb_util.imports
        SCRIPT_PLACEHOLDER::docdb_util.count_cluster_instances

  - name: VerifyInstanceExistInCluster
    action: aws:executeScript
    description: Verify DocDb instance exists in same cluster
    onFailure: Abort
    inputs:
      Runtime: python3.7
      Handler: verify_db_instance_exist
      InputPayload:
        DBInstanceIdentifier: '{{ DBInstanceReplicaIdentifier }}'
        DBClusterIdentifier: '{{ DBClusterIdentifier }}'
      Script: |-
        SCRIPT_PLACEHOLDER::docdb_util.imports
        SCRIPT_PLACEHOLDER::docdb_util.verify_db_instance_exist

  - name: RemoveDocDbReadReplica
    action: aws:executeAwsApi
    description: Remove selected DocDb Read Replica
    inputs:
      Service: docdb
      Api: DeleteDBInstance
      DBInstanceIdentifier: '{{ DBInstanceReplicaIdentifier }}'

  - name: WaitUntilInstancesAvailable
    action: aws:waitForAwsResourceProperty
    timeoutSeconds: 1200
    inputs:
      Service: docdb
      Api: DescribeDBInstances
      Filters:
        - Name: "db-cluster-id"
          Values:
            - '{{ DBClusterIdentifier }}'
      PropertySelector: '$.DBInstances..DBInstanceStatus'
      DesiredValues:
        - available

  - name: VerifyCurrentInstancesCount
    action: aws:executeScript
    description: Verify current DocDb cluster instances count value
    timeoutSeconds: 600
    onFailure: Abort
    outputs:
      - Name: CurrentInstancesNumber
        Selector: $.Payload.DbClusterInstancesNumber
        Type: Integer
    inputs:
      Runtime: python3.7
      Handler: verify_cluster_instances
      InputPayload:
        BeforeDbClusterInstancesNumber: '{{ BackupDbClusterInstancesCount.DbClusterInstancesNumber }}'
        DBClusterIdentifier: '{{ DBClusterIdentifier }}'
      Script: |-
        SCRIPT_PLACEHOLDER::docdb_util.imports
        SCRIPT_PLACEHOLDER::docdb_util.verify_cluster_instances

  - name: OutputRecoveryTime
    action: 'aws:executeScript'
    outputs:
      - Name: RecoveryTime
        Selector: $.Payload
        Type: Integer
    inputs:
      Runtime: python3.7
      Handler: recovery_time
      Script: |-
        SCRIPT_PLACEHOLDER::common_util.imports
        SCRIPT_PLACEHOLDER::common_util.recovery_time
      InputPayload:
        StartTime: '{{ RecordStartTime.StartTime }}'