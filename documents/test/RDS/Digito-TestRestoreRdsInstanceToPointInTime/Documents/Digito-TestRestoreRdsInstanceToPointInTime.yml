---
description: 'Test for Restore Rds Instance to point in time SOP'
schemaVersion: '0.3'
assumeRole: '{{ AutomationAssumeRole }}'
parameters:
  DbInstanceIdentifier:
    type: String
    description: (Required) The identifier for the db instance.
  SyntheticAlarmName:
    type: String
    description: (Required) Name for the Application Synthetics Alarm.
  AutomationAssumeRole:
    type: String
    description: (Optional) The ARN of the role that allows Automation to perform the actions on your behalf.
    default: ''
outputs:
  - CalculateRecoveryPoint.RecoveryPoint
  - CalculateRecoveryTime.RecoveryTime
mainSteps:
  - name: RestoreDbInstance
    action: 'aws:executeAutomation'
    inputs:
      DocumentName: Digito-RestoreRdsInstanceToPointInTime
      RuntimeParameters:
        AutomationAssumeRole: '{{AutomationAssumeRole}}'
        DbInstanceIdentifier: '{{DbInstanceIdentifier}}'
  - name: WaitForAlarmToBeRed
    action: aws:waitForAwsResourceProperty
    maxAttempts: 10
    timeoutSeconds: 600
    onFailure: 'step:DeleteOldDatabase'
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
      - "{{SyntheticAlarmName}}"
      PropertySelector: "$.MetricAlarms[0].StateValue"
      DesiredValues: ["ALARM"]
  - name: WaitForAlarmToBeGreen
    action: aws:waitForAwsResourceProperty
    maxAttempts: 10
    timeoutSeconds: 600
    onFailure: 'step:DeleteOldDatabase'
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
      - "{{SyntheticAlarmName}}"
      PropertySelector: "$.MetricAlarms[0].StateValue"
      DesiredValues: ["OK"]
  - name: CalculateRecoveryPoint
    action: aws:executeScript
    onFailure: 'step:CalculateRecoveryTime'
    outputs:
      - Name: RecoveryPoint
        Selector: $.Payload.RecoveryPoint
        Type: String
    inputs:
      Runtime: python3.6
      Handler: ssm_execution_util.get_output_from_ssm_step_execution
      InputPayload:
        ExecutionId: '{{RestoreDbInstance.ExecutionId}}'
        StepName: 'RestoreToPointInTime'
        ResponseField: 'RecoveryPoint'
      Attachment: digito_gameday_primitives.zip
  - name: CalculateRecoveryTime
    action: aws:executeScript
    onFailure: 'step:DeleteOldDatabase'
    outputs:
      - Name: RecoveryTime
        Selector: $.Payload.duration
        Type: String
    inputs:
      Runtime: python3.6
      Handler: ssm_execution_util.get_step_durations
      InputPayload:
        ExecutionId: '{{automation:EXECUTION_ID}}'
        StepName: 'RestoreDbInstance,WaitForAlarmToBeRed,WaitForAlarmToBeGreen'
      Attachment: digito_gameday_primitives.zip
  - name: DeleteOldDatabase
    action: 'aws:executeAwsApi'
    maxAttempts: 3
    inputs:
      Service: rds
      Api: DeleteDBInstance
      DBInstanceIdentifier: "{{DbInstanceIdentifier}}-old-{{RestoreDbInstance.ExecutionId}}"
      SkipFinalSnapshot: True
    isEnd: true