#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
schemaVersion: '0.3'
description: Execute network unavailable on ec2 instances in ASG via Run Command
assumeRole: '{{AutomationAssumeRole}}'
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf
  AutoScalingGroupName:
    type: String
    description: (Required) Name of auto scaling group
  MultipleUnhealthyHostsAlarmName:
    type: String
    description: (Required) MultipleUnhealthyHostsAlarmName which should be triggerred
  PercentageOfInstances:
    type: Integer
    description: (Optional) Percentage of ASG EC2 instances to be impacted
    default: 1
  DurationInMinutes:
    type: String
    description: (Optional) The duration of the attack in minutes (default 5)
    default: '5'
mainSteps:
  - name: AssertAlarmToBeGreenBeforeTest
    action: aws:waitForAwsResourceProperty
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
        - "{{MultipleUnhealthyHostsAlarmName}}"
      PropertySelector: "$.MetricAlarms[0].StateValue"
      DesiredValues: ["OK"]
  - name: GetAsgInstanceIds
    action: 'aws:executeScript'
    onFailure: Abort
    outputs:
      - Name: InstanceIds
        Selector: $.Payload.InstanceIds
        Type: StringList
    inputs:
      Runtime: python3.6
      Handler: get_healthy_instance_ids_in_asg
      InputPayload:
        AutoScalingGroupName: '{{AutoScalingGroupName}}'
      Script: |-
        SCRIPT_PLACEHOLDER::asg_util.imports

        SCRIPT_PLACEHOLDER::asg_util.get_healthy_instance_ids_in_asg
  - name: GetInstancesByPercentage
    action: 'aws:executeScript'
    onFailure: Abort
    outputs:
      - Name: InstanceIds
        Selector: $.Payload.InstanceIds
        Type: StringList
    inputs:
      Runtime: python3.6
      Handler: get_instance_ids_by_percentage
      InputPayload:
        InstanceIds: '{{GetAsgInstanceIds.InstanceIds}}'
        Percentage: '{{PercentageOfInstances}}'
      Script: |-
        SCRIPT_PLACEHOLDER::asg_util.imports

        SCRIPT_PLACEHOLDER::asg_util.get_instance_ids_by_percentage
  - name: SimulateNetworkUnavailable
    action: aws:runCommand
    onFailure: Continue
    timeoutSeconds: 60
    inputs:
      DocumentName: Digito-NetworkUnavailableCommand_2020-07-23
      InstanceIds:
        - '{{GetInstancesByPercentage.InstanceIds}}'
      Parameters:
        DurationInMinutes: '{{DurationInMinutes}}'
      TimeoutSeconds: 60
  - name: WaitForTestDuration
    action: 'aws:sleep'
    inputs:
      Duration: 'PT{{DurationInMinutes}}M'
  - name: AssertAlarmTriggered
    action: 'aws:executeScript'
    onFailure: Abort
    inputs:
      Runtime: python3.6
      Handler: verify_alarm_triggered
      InputPayload:
        AlarmName: '{{MultipleUnhealthyHostsAlarmName}}'
        DurationInMinutes: '{{DurationInMinutes}}'
      Script: |-
        SCRIPT_PLACEHOLDER::cloudwatch_util.imports

        SCRIPT_PLACEHOLDER::cloudwatch_util.verify_alarm_triggered
  - name: AssertAlarmToBeGreen
    action: aws:waitForAwsResourceProperty
    maxAttempts: 1
    timeoutSeconds: 600
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
        - "{{MultipleUnhealthyHostsAlarmName}}"
      PropertySelector: "$.MetricAlarms[0].StateValue"
      DesiredValues: ["OK"]
    isEnd: true