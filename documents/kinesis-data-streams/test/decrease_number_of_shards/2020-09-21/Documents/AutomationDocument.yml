#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
description: >-
            ## Id
            Digito-DecreaseNumberOfKinesisDataStreamsShardsTest_2020-09-21

            ## Intent
            Test system behavior if Amazon Kinesis Data Streams shards has been decreased and the alarm based on WriteProvisionedThroughputExceeded has been moved to ALARM state

            ## Type
            TEST

            ## Risk
            High

            ## Requirements
              * Amazon Kinesis Data Stream with 1 shard
              * Amazon CloudWatch alarm is setup for [WriteProvisionedThroughputExceeded](https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html) metric. Should trigger when the number of rejected records is greater than 0

            ## Depends on
            Digito-UpdateKinesisDataStreamsShardCountSOP_2020-10-26

            ## Permission required for AutomationAssumeRole
              * kinesis:DescribeStream
              * kinesis:UpdateKinesisDataStreamsShardCount
              * kinesis:DescribeStreamSummary
              * kinesis:UpdateShardCount
              * cloudwatch:DescribeAlarms
              * ssm:StartAutomationExecution
              * ssm:GetAutomationExecution

            ## Supports Rollback
            Yes. The document returns the initial number of shards, which was before the decrease

            ## Cancellation behavior
            The document returns the initial number of shards, which was before the decrease

            ## Inputs
            ### (Required) AutomationAssumeRole
              * type: String
              * description: ARN of the IAM role with permissions listed above

            ### (Required) StreamName
              * type: String
              * description: Amazon Kinesis Data Stream name

            ### (Required) KinesisDataStreamsUserErrorAlarmName
              * type: String
              * description: Amazon CloudWatch alarm is setup for [WriteProvisionedThroughputExceeded](https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html) metric. Should trigger when the number of rejected records is greater than 0

            ### (Optional) IsRollback
              * type: String
              * description: Run rollback step of the given previous execution (parameter `PreviousExecutionId`). Can be either true or false.
              * default: false

            ### (Optional) PreviousExecutionId
              * type: String
              * description: Previous execution id for which resources need to be cleaned up.

            ## Details
            The document injects failure by putting many records to one shard.

            ## Steps executed in normal flow
              * CheckIsRollback
              * AssertAlarmToBeGreenBeforeTest
              * BackupCurrentExecution
              * DecreaseShardCountToOneShard
              * AssertAlarmToBeRed
              * RollbackCurrentExecution
              * AssertAlarmToBeGreen

            ## Steps executed in rollback flow
              * CheckIsRollback
              * GetInputsFromPreviousExecution
              * AssertInputsFromPreviousExecution
              * PrepareRollbackOfPreviousExecution
              * RollbackPreviousExecution

            ## Outputs
            None

schemaVersion: "0.3"
assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  StreamName:
    type: String
    description: (Required) Amazon Kinesis Data Stream name
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
  KinesisDataStreamsUserErrorAlarmName:
    type: String
    description: (Required) Alarm which should be red after injection of the failure and green after the rollback process in the end of the test.
  IsRollback:
    type: String
    description: >-
      (Optional) Run rollback step of the given previous execution (parameter `PreviousExecutionId`). Can be either true or false.
    default: 'false'
  PreviousExecutionId:
    type: String
    description: >-
      (Optional) Previous execution id for which resources need to be cleaned up.
    default: ''
mainSteps:
  - name: CheckIsRollback
    description: Check if document should be executed in rollback mode
    action: aws:branch
    inputs:
      Choices:
        - NextStep: PrepareRollbackOfPreviousExecution
          Variable: "{{IsRollback}}"
          StringEquals: 'true'
      Default: AssertAlarmToBeGreenBeforeTest

  - name: GetInputsFromPreviousExecution
    description: Get input from previous execution. This will be used to validate that rollback is executed with the same input
    action: aws:executeScript
    outputs:
      - Name: StreamName
        Selector: $.Payload.StreamName[0]
        Type: String
    inputs:
      Runtime: python3.7
      Handler: get_inputs_from_ssm_execution
      InputPayload:
        ExecutionId: '{{ PreviousExecutionId }}'
      Script: |-
        SCRIPT_PLACEHOLDER::ssm_execution_util.imports

        SCRIPT_PLACEHOLDER::ssm_execution_util.get_inputs_from_ssm_execution

  - name: AssertStreamName
    description: Validate that rollback is executed with the same input
    action: aws:branch
    inputs:
      Choices:
        - NextStep: RollbackPreviousExecution
          Variable: "{{ GetInputsFromPreviousExecution.StreamName }}"
          StringEquals: '{{ StreamName }}'
    isEnd: true

  - name: PrepareRollbackOfPreviousExecution
    description: Get initital state of the stream from previous execution
    action: aws:executeScript
    outputs:
      - Name: StreamName
        Selector: $.Payload.StreamName[0]
        Type: String
    inputs:
      Runtime: python3.7
      Handler: get_output_from_ssm_step_execution
      InputPayload:
        ExecutionId: '{{ PreviousExecutionId }}'
        StepName: 'BackupCurrentExecution'
        ResponseField: 'StreamName'
      Script: |-
        SCRIPT_PLACEHOLDER::ssm_execution_util.imports

        SCRIPT_PLACEHOLDER::ssm_execution_util.get_output_from_ssm_step_execution

  - name: RollbackPreviousExecution
    description: Revert stream to initial state
    action: aws:executeAutomation
    inputs:
      DocumentName: Digito-UpdateKinesisDataStreamsShardCountSOP_2020-10-26
      RuntimeParameters:
        AutomationAssumeRole: '{{AutomationAssumeRole}}'
        StreamName: '{{StreamName}}'
        TargetShardCount: '{{PrepareRollbackOfPreviousExecution.ShardCount}}'
    isEnd: true

  - name: AssertAlarmToBeGreenBeforeTest
    description: Ensure alarm is green before starting test. Fail if alarm is not green within expected time
    action: aws:waitForAwsResourceProperty
    maxAttempts: 1
    timeoutSeconds: 300
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
        - "{{KinesisDataStreamsUserErrorAlarmName}}"
      PropertySelector: "$.MetricAlarms[0].StateValue"
      DesiredValues: [ "OK" ]

  - name: BackupCurrentExecution
    description: Get the number of shards from the specified stream
    action: aws:executeAwsApi
    outputs:
      - Name: ShardCount
        Selector: $.StreamDescriptionSummary.OpenShardCount
        Type: Integer
    inputs:
      Service: kinesis
      Api: DescribeStreamSummary
      StreamName: '{{ StreamName }}'

  - name: DecreaseShardCountToOneShard
    description: Decrease the number of shards to one shard
    onFailure: step:RollbackCurrentExecution
    onCancel: step:TriggerRollback
    action: aws:executeAutomation
    inputs:
      DocumentName: Digito-UpdateKinesisDataStreamsShardCountSOP_2020-10-26
      RuntimeParameters:
        AutomationAssumeRole: '{{AutomationAssumeRole}}'
        StreamName: '{{StreamName}}'
        TargetShardCount: 1

  - name: AssertAlarmToBeRed
    description: Wait for expected alarm to be red after failure is injected
    action: aws:waitForAwsResourceProperty
    maxAttempts: 1
    timeoutSeconds: 1800
    onFailure: step:RollbackCurrentExecution
    onCancel: step:TriggerRollback
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
        - "{{KinesisDataStreamsUserErrorAlarmName}}"
      PropertySelector: "$.MetricAlarms[0].StateValue"
      DesiredValues: [ "ALARM" ]

  - name: RollbackCurrentExecution
    description: Revert stream to initial state
    maxAttempts: 5
    onCancel: step:TriggerRollback
    action: aws:executeAutomation
    inputs:
      DocumentName: Digito-UpdateKinesisDataStreamsShardCountSOP_2020-10-26
      RuntimeParameters:
        AutomationAssumeRole: '{{AutomationAssumeRole}}'
        StreamName: '{{StreamName}}'
        TargetShardCount: '{{BackupCurrentExecution.ShardCount}}'

  - name: AssertAlarmToBeGreen
    description: Wait for the alarm to be green after test is complete
    action: aws:waitForAwsResourceProperty
    maxAttempts: 1
    timeoutSeconds: 900
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
        - "{{KinesisDataStreamsUserErrorAlarmName}}"
      PropertySelector: "$.MetricAlarms[0].StateValue"
      DesiredValues: [ "OK" ]
    isEnd: true

  - name: TriggerRollback
    description: This step is executed when ssm document is cancelled while it was in progress. This step starts a new execution of document in rollback mode to rollback the changes made as part of normal execution
    action: 'aws:executeScript'
    onFailure: Abort
    outputs:
      - Name: RollbackExecutionId
        Selector: $.Payload.RollbackExecutionId
        Type: String
    inputs:
      Runtime: python3.7
      Handler: start_rollback_execution
      InputPayload:
        ExecutionId: '{{automation:EXECUTION_ID}}'
      Script: |-
        SCRIPT_PLACEHOLDER::ssm_execution_util.imports

        SCRIPT_PLACEHOLDER::ssm_execution_util.start_rollback_execution
    isEnd: true
