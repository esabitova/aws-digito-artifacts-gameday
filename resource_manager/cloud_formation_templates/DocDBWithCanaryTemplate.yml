#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
AWSTemplateFormatVersion: 2010-09-09
Description: Test stack for DocumentDb with Canary
Outputs:
  DBClusterIdentifier:
    Value: !Ref DBCluster
  DBInstancePrimaryIdentifier:
    Value: !Ref DBInstancePrimary
  DBInstanceReplicaIdentifier:
    Value: !Ref DBInstanceReplica
  ClusterEndpoint:
    Value: !GetAtt DBCluster.Endpoint
  ClusterPort:
    Value: !GetAtt DBCluster.Port
  ClusterResourceId:
    Value: !GetAtt DBCluster.ClusterResourceId
  EngineVersion:
    Value: "4.0.0"
  DatabaseConnectionAttemptAlarmName:
    Value: !Ref DatabaseConnectionAttemptAlarm
  VPCSecurityGroupId:
    Value: !Ref VPCSecurityGroup
  DocumentDbConnectionAttemptCanaryName:
    Value: !Ref DocumentDbConnectionAttemptCanary
Parameters:
  DBInstanceClass:
    Description: "Instance class. Please refer to: https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-classes.html#db-instance-classes-by-region"
    Type: "String"
    Default: "db.t3.medium"
    AllowedValues:
      - db.t3.medium
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.12xlarge
      - db.r5.24xlarge
    ConstraintDescription: "Instance type must be of the ones supported for the region. Please refer to: https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-classes.html#db-instance-classes-by-region"
  VPC:
    Type: String
    Description: VPC ID
  VPCCIDR:
    Type: String
    Description: IP Address range for the VPC
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Valid IP CIDR range of the form x.x.x.x/x.
  PrivateSubnet01:
    Type: String
    Description: PrivateSubnet ID
  PrivateSubnet02:
    Type: String
    Description: PrivateSubnet ID
  DbClusterPort:
    Type: Number
    Description: DocDb cluster port
    Default: 27017
  DocumentDbConnectionAttemptCanaryS3Bucket:
    Type: String
    Description: S3 bucket for distribution package
  DocumentDbConnectionAttemptCanaryS3Key:
    Type: String
    Description: S3 key for distribution package
  DocumentDbConnectionAttemptCanaryS3ObjectVersion:
    Type: String
    Description: S3 object version for distribution packasdagesdfsasmnbasdnbasdasdasd
    Default: ""
  CleanupS3BucketLambdaArn:
    Description: ARN of Cleanup S3 Bucket Lambda Function
    Type: String
  CleanupCanaryLambdaArn:
    Description: ARN of Cleanup Canary Lambda Function
    Type: String
Conditions:
  CanaryS3ObjectHasVersion: !Not
    - !Equals
      - !Ref DocumentDbConnectionAttemptCanaryS3ObjectVersion
      - ""
Resources:
  GeneratedSecretString:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Generated DocumentDb cluster password
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admindb"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: "\"@/\\"

  VPCSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: VPC Security Group of DocumentDB cluster for Digito scenarios
      SecurityGroupEgress: []
      SecurityGroupIngress:
        - CidrIp:
            Ref: VPCCIDR
          FromPort:
            Ref: DbClusterPort
          IpProtocol: TCP
          ToPort:
            Ref: DbClusterPort
        - CidrIp:
            Ref: VPCCIDR
          FromPort:
            Ref: DbClusterPort
          IpProtocol: TCP
          ToPort:
            Ref: DbClusterPort
      VpcId:
        Ref: VPC

  DBCluster:
    Type: "AWS::DocDB::DBCluster"
    DeletionPolicy: Delete
    Properties:
      DBClusterIdentifier: !Join
        - "-"
        - - "dbcluster"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      MasterUsername: !Sub '{{resolve:secretsmanager:${GeneratedSecretString}::username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${GeneratedSecretString}::password}}'
      StorageEncrypted: true
      EngineVersion: 4.0.0
      VpcSecurityGroupIds:
        - !GetAtt VPCSecurityGroup.GroupId
      DBSubnetGroupName: !Ref DocDbClusterSubnetGroup
      KmsKeyId: !Ref KmsKey

  DocDbClusterSubnetGroup:
    Type: "AWS::DocDB::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "DocumentDB cluster subnet group"
      SubnetIds:
        - !Ref PrivateSubnet01
        - !Ref PrivateSubnet02

  DBInstancePrimary:
    Type: "AWS::DocDB::DBInstance"
    Properties:
      DBClusterIdentifier: !Ref DBCluster
      DBInstanceIdentifier: !Join
        - "-"
        - - "dbinstance01"
          - !Ref "AWS::Region"
          - !Ref "AWS::AccountId"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      DBInstanceClass: !Ref DBInstanceClass

  DBInstanceReplica:
    Type: "AWS::DocDB::DBInstance"
    Properties:
      DBClusterIdentifier: !Ref DBCluster
      DBInstanceIdentifier: !Join
        - "-"
        - - "dbinstance02"
          - !Ref "AWS::Region"
          - !Ref "AWS::AccountId"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      DBInstanceClass: !Ref DBInstanceClass
    DependsOn: DBInstancePrimary

  DocumentDbConnectionAttemptCanary:
    Type: "AWS::Synthetics::Canary"
    Properties:
      Name: !Join
        - "-"
        - - "docdb-con"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      Code:
        Handler: "docdb_canary_connect.handler"
        S3Bucket:
          Ref: DocumentDbConnectionAttemptCanaryS3Bucket
        S3Key:
          Ref: DocumentDbConnectionAttemptCanaryS3Key
        S3ObjectVersion:
          Fn::If:
            - CanaryS3ObjectHasVersion
            - Ref: DocumentDbConnectionAttemptCanaryS3ObjectVersion
            - Ref: AWS::NoValue
      ExecutionRoleArn: !GetAtt RoleDocumentDbConnectionAttempt.Arn
      Schedule:
        Expression: "rate(1 minute)"
        DurationInSeconds: '0'
      RunConfig:
        TimeoutInSeconds: 60
        MemoryInMB: 960
        ActiveTracing: false
        EnvironmentVariables:
          SECRET_ID: !Sub '${GeneratedSecretString}'
          ENDPOINT: !GetAtt DBInstancePrimary.Endpoint
          PORT: !GetAtt DBInstancePrimary.Port
      SuccessRetentionPeriod: 5
      FailureRetentionPeriod: 5
      ArtifactS3Location:
        !Join [
        "",
          [
            "s3://",
            !Ref S3BucketForCanaryLogs,
            "/"
          ],
        ]
      RuntimeVersion: syn-python-selenium-1.0
      StartCanaryAfterCreation: false
      VPCConfig:
        SecurityGroupIds:
          - Ref: VPCSecurityGroup
        SubnetIds:
          - Ref: PrivateSubnet01
        VpcId: !Ref VPC

  DatabaseConnectionAttemptAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: false
      MetricName: "Failed"
      Namespace: "CloudWatchSynthetics"
      Statistic: "Sum"
      Dimensions:
        - Name: "CanaryName"
          Value: !Ref DocumentDbConnectionAttemptCanary
      Period: 10
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 0
      ComparisonOperator: "GreaterThanThreshold"
      TreatMissingData: "notBreaching"

  RoleDocumentDbConnectionAttempt:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole

  PolicyDocumentDbConnectionAttempt:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PolicyDocumentDbConnectionAttempt
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource: "*"
            Action:
              #              - todo leave only required
              - rds:Describe*
              - s3:*
              - secretsmanager:*
              - cloudwatch:PutMetricData
              - ec2:*
              - ec2:CreateNetworkInterface
      Roles:
        - Ref: RoleDocumentDbConnectionAttempt

  S3BucketForCanaryLogs:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Join
        - "-"
        - - "canary-logs-digito"
          - !Ref "AWS::Region"
          - !Ref "AWS::AccountId"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  KmsKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: '2012-10-17'
        Id: !Join
          - "-"
          - - "kms-key-policy"
            - !Select
              - 0
              - !Split
                - "-"
                - !Select
                  - 2
                  - !Split
                    - "/"
                    - !Ref "AWS::StackId"
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: kms:*
            Resource: "*"

  # To clean S3 buckets before deleting stack.
  CleanupS3BucketsOnDelete:
    Type: Custom::CleanupS3BucketsOnDelete
    Properties:
      ServiceToken: !Ref CleanupS3BucketLambdaArn
      BucketNames:
        - !Ref S3BucketForCanaryLogs

  # To clean canary before deleting stack.
  CleanupCanaryOnDelete:
    Type: Custom::CleanupCanaryOnDelete
    Properties:
      ServiceToken: !Ref CleanupCanaryLambdaArn
      CanaryNames:
        - !Ref DocumentDbConnectionAttemptCanary
