#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
AWSTemplateFormatVersion: 2010-09-09
Description: Test stack for network load-balancer
Outputs:
  NetworkELB:
    Description: Network Load Balancer ARN
    Value: !Ref  NetworkELB
  NetworkELBUrl:
    Description: The Network Elastic Load Balancer DNS Name
    Value: !GetAtt NetworkELB.DNSName
  NetworkELBFullName:
    Description: The Network Elastic Load Balancer Key For Alarm Setup
    Value: !GetAtt NetworkELB.LoadBalancerFullName
Parameters:
  VPCCidr:
    Type: String
    Description: VPC cidr block
    Default: 10.0.0.0/16
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: 'choose-key'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Type: String
    Default: t3.small
#  SSHLocation:
#    Description: The IP address range that can be used to SSH to the EC2 instances
#    Type: String
#    MinLength: 9
#    MaxLength: 18
#    Default: 0.0.0.0/0
#    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
#    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  # add required parameters here
Resources:
  NLBVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: NLBVPC

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the ec2 hosts
      VpcId: !Ref 'NLBVPC'

  NLBPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref NLBVPC
      CidrBlock: !Select
        - 1
        - !Cidr
          - !Ref VPCCidr
          - 2
          - 8
      Tags:
        - Key: Name
          Value: NLBPrivateSubnet
  NetworkELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: ipv4
      LoadBalancerAttributes: 
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internal
      SubnetMappings: 
        - SubnetId: !Ref NLBPrivateSubnet
      Type: network

  NLBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckPort: "80"
      HealthCheckProtocol: TCP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      Port: 80
      Protocol: TCP
      TargetGroupAttributes: 
        - Key: stickiness.enabled
          Value: "true"
      Targets:
      - Id:
          Ref: AmazonLinuxInstance
        Port: 80
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId: !Ref NLBVPC

  # Linux Instance with Apache running on Port 80
  AmazonLinuxInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      Monitoring: true
      NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeviceIndex: '0'
        GroupSet:
        - !Ref EC2SecurityGroup
        SubnetId:
          Ref: NLBPrivateSubnet
      Tenancy: default
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          cd /tmp
          yum update -y
          yum install -y httpd24
          echo "Healthy" > /var/www/html/index.html
          service httpd start
          /opt/aws/bin/cfn-signal \
            -e $? \
            --stack ${AWS::StackName} \
            --resource AmazonLinuxInstance \
            --region ${AWS::Region}
