#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
AWSTemplateFormatVersion: 2010-09-09
Description: Test stack for DocumentDb
Outputs:
  DBClusterIdentifier:
    Value: !Ref DBCluster
  DBInstancePrimaryIdentifier:
    Value: !Ref DBInstancePrimary
  DBInstanceReplicaIdentifier:
    Value: !Ref DBInstanceReplica
  ClusterEndpoint:
    Value: !GetAtt DBCluster.Endpoint
  ClusterPort:
    Value: !GetAtt DBCluster.Port
  ClusterResourceId:
    Value: !GetAtt DBCluster.ClusterResourceId
  EngineVersion:
    Value: "4.0.0"
  DatabaseConnectionAttemptAlarmName:
    Condition: CreateCanary
    Value: !Ref DatabaseConnectionAttemptAlarm
  VPCSecurityGroupId:
    Value: !Ref VPCSecurityGroup
  DocumentDbConnectionAttemptCanaryName:
    Condition: CreateCanary
    Value: !Ref DocumentDbConnectionAttemptCanary
Parameters:
  DBInstanceClass:
    Description: "Instance class. Please refer to: https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-classes.html#db-instance-classes-by-region"
    Type: "String"
    Default: "db.t3.medium"
    AllowedValues:
      - db.t3.medium
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.12xlarge
      - db.r5.24xlarge
    ConstraintDescription: "Instance type must be of the ones supported for the region. Please refer to: https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-classes.html#db-instance-classes-by-region"
  VPCCIDR:
    Type: String
    Description: IP Address range for the VPC
    MinLength: '9'
    MaxLength: '18'
    Default: 10.12.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Valid IP CIDR range of the form x.x.x.x/x.
  PrivateSubnet01CIDR:
    Type: String
    Description: IP Address range for private subnet 1
    MinLength: '9'
    MaxLength: '18'
    Default: 10.12.0.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Valid IP CIDR range of the form x.x.x.x/x.
  PrivateSubnet02CIDR:
    Type: String
    Description: IP Address range for private subnet 2
    MinLength: '9'
    MaxLength: '18'
    Default: 10.12.1.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  PublicSubnet01CIDR:
    Type: String
    Description: IP Address range for public subnet 1
    MinLength: '9'
    MaxLength: '18'
    Default: 10.12.2.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  DbClusterPort:
    Type: Number
    Description: DocDb cluster port
    Default: 27017
  DocumentDbConnectionAttemptCanaryS3Bucket:
    Type: String
    Description: S3 bucket for distribution package
    Default: ""
  DocumentDbConnectionAttemptCanaryS3Key:
    Type: String
    Description: S3 key for distribution package
    Default: ""
  DocumentDbConnectionAttemptCanaryS3ObjectVersion:
    Type: String
    Description: S3 object version for distribution packasdagesdfsasmnbasdnbasdasdasd
    Default: ""
Conditions:
  CreateCanary: !Not
    - !Equals
      - !Ref DocumentDbConnectionAttemptCanaryS3Key
      - ""
  CanaryS3ObjectHasVersion: !Not
    - !Equals
      - !Ref DocumentDbConnectionAttemptCanaryS3ObjectVersion
      - ""
Resources:
  GeneratedSecretString:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Generated DocumentDb cluster password
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admindb"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: "\"@/\\"
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock:
        Ref: VPCCIDR
  PrivateSubnet01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet01CIDR
      AvailabilityZone: !Select
        - "0"
        - !GetAZs ""
  PrivateSubnet02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet02CIDR
      AvailabilityZone: !Select
        - "1"
        - !GetAZs ""
  PublicSubnet01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnet01CIDR
      AvailabilityZone: !Select
        - "0"
        - !GetAZs ""
  VPCSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: VPC Security Group of DocumentDB cluster for Digito scenarios
      SecurityGroupEgress: [ ]
      SecurityGroupIngress:
        - CidrIp:
            Ref: VPCCIDR
          FromPort:
            Ref: DbClusterPort
          IpProtocol: TCP
          ToPort:
            Ref: DbClusterPort
        - CidrIp:
            Ref: VPCCIDR
          FromPort:
            Ref: DbClusterPort
          IpProtocol: TCP
          ToPort:
            Ref: DbClusterPort
      VpcId:
        Ref: VPC
  DBCluster:
    Type: "AWS::DocDB::DBCluster"
    DeletionPolicy: Delete
    Properties:
      DBClusterIdentifier: !Join # Make it shorter since the limit is 63 symbols
        - "-"
        - - "dbcluster"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      MasterUsername: !Sub '{{resolve:secretsmanager:${GeneratedSecretString}::username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${GeneratedSecretString}::password}}'
      StorageEncrypted: true
      EngineVersion: 4.0.0
      VpcSecurityGroupIds:
        - !GetAtt VPCSecurityGroup.GroupId
      DBSubnetGroupName: !Ref DocDbClusterSubnetGroup
      KmsKeyId: !Ref KmsKey
  DocDbClusterSubnetGroup:
    Type: "AWS::DocDB::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "DocumentDB cluster subnet group"
      SubnetIds:
        - !Ref PrivateSubnet01
        - !Ref PrivateSubnet02
  DBInstancePrimary:
    Type: "AWS::DocDB::DBInstance"
    Properties:
      DBClusterIdentifier: !Ref DBCluster
      DBInstanceIdentifier: !Join
        - "-"
        - - "dbinstance01"
          - !Ref "AWS::Region"
          - !Ref "AWS::AccountId"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      DBInstanceClass: !Ref DBInstanceClass
  DBInstanceReplica:
    Type: "AWS::DocDB::DBInstance"
    Properties:
      DBClusterIdentifier: !Ref DBCluster
      DBInstanceIdentifier: !Join
        - "-"
        - - "dbinstance02"
          - !Ref "AWS::Region"
          - !Ref "AWS::AccountId"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      DBInstanceClass: !Ref DBInstanceClass
    DependsOn: DBInstancePrimary
  HighVolumeReadIOPSAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:usage-high_volume_read_iops:2020-04-01"
      ActionsEnabled: false
      Metrics:
        - Expression: "ANOMALY_DETECTION_BAND(m1, 2)"
          Id: ad1
        - MetricStat:
            Metric:
              MetricName: VolumeReadIOPs
              Namespace: AWS/DocDB
              Dimensions:
                - Name: DBClusterIdentifier
                  Value: !Ref DBCluster
            Period: 300
            Stat: Average
          Id: m1
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      ThresholdMetricId: ad1
      ComparisonOperator: LessThanLowerOrGreaterThanUpperThreshold
      TreatMissingData: missing
  HighVolumeWriteIOPSAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:usage-high_volume_read_iops:2020-04-01"
      ActionsEnabled: false
      Metrics:
        - Expression: "ANOMALY_DETECTION_BAND(m1, 2)"
          Id: ad1
        - MetricStat:
            Metric:
              MetricName: VolumeWriteIOPs
              Namespace: AWS/DocDB
              Dimensions:
                - Name: DBClusterIdentifier
                  Value: !Ref DBCluster
            Period: 300
            Stat: Average
          Id: m1
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      ThresholdMetricId: ad1
      ComparisonOperator: LessThanLowerOrGreaterThanUpperThreshold
      TreatMissingData: missing
  HighVolumeSizeAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:usage-volume_bytes_used:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Ref DBCluster
      MetricName: VolumeBytesUsed
      Namespace: AWS/DocDB
      Period: 300
      Statistic: Maximum
      Threshold: 1099511627776
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
  LowMemoryDBInstancePrimaryAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-freeable_memory:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstancePrimary
      MetricName: FreeableMemory
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Minimum
      Threshold: 157286400
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: missing
  LowMemoryDBInstanceReplicaAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-freeable_memory:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceReplica
      MetricName: FreeableMemory
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Minimum
      Threshold: 157286400
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: missing
  LowStorageAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-storage:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Ref DBCluster
      MetricName: FreeLocalStorage
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Minimum
      Threshold: 10
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: missing
  OverUtilizedCPUDBInstancePrimaryAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-cpu:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstancePrimary
      MetricName: CPUUtilization
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Maximum
      Threshold: 90
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: missing
  OverUtilizedCPUDBInstanceReplicaAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-cpu:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceReplica
      MetricName: CPUUtilization
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Maximum
      Threshold: 90
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: missing
  ConnectionSpikeDBInstancePrimaryAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-connections:2020-04-01"
      ActionsEnabled: false
      Metrics:
        - Expression: "ANOMALY_DETECTION_BAND(m1, 1)"
          Id: ad1
        - MetricStat:
            Metric:
              MetricName: DatabaseConnections
              Namespace: AWS/DocDB
              Dimensions:
                - Name: DBInstanceIdentifier
                  Value: !Ref DBInstancePrimary
            Period: 60
            Stat: Maximum
          Id: m1
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ThresholdMetricId: ad1
      ComparisonOperator: GreaterThanUpperThreshold
      TreatMissingData: missing
  ConnectionSpikeDBInstanceReplicaAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-connections:2020-04-01"
      ActionsEnabled: false
      Metrics:
        - Expression: "ANOMALY_DETECTION_BAND(m1, 1)"
          Id: ad1
        - MetricStat:
            Metric:
              MetricName: DatabaseConnections
              Namespace: AWS/DocDB
              Dimensions:
                - Name: DBInstanceIdentifier
                  Value: !Ref DBInstancePrimary
            Period: 60
            Stat: Maximum
          Id: m1
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ThresholdMetricId: ad1
      ComparisonOperator: GreaterThanUpperThreshold
      TreatMissingData: missing
  SwapUsedDBInstancePrimaryAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-swap_usage:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstancePrimary
      MetricName: SwapUsage
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Minimum
      Threshold: 10485760
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
  SwapUsedDBInstanceReplicaAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-swap_usage:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceReplica
      MetricName: SwapUsage
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Minimum
      Threshold: 10485760
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
  HighReadLatencyDBInstancePrimaryAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-read_latency:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstancePrimary
      MetricName: ReadLatency
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Maximum
      Threshold: 1
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
  HighReadLatencyDBInstanceReplicaAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-read_latency:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceReplica
      MetricName: ReadLatency
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Maximum
      Threshold: 1
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
  HighWriteLatencyDBInstancePrimaryAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-write_latency:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstancePrimary
      MetricName: WriteLatency
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Maximum
      Threshold: 1
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
  HighWriteLatencyDBInstanceReplicaAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-write_latency:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceReplica
      MetricName: WriteLatency
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Maximum
      Threshold: 1
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
  HighDiskQueueDepthDBInstancePrimaryAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-disk_queue_depth:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstancePrimary
      MetricName: DiskQueueDepth
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Maximum
      Threshold: 3
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
  HighDiskQueueDepthDBInstanceReplicaAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-disk_queue_depth:2020-04-01"
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceReplica
      MetricName: DiskQueueDepth
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Maximum
      Threshold: 3
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
  LowCPUCreditBalanceDBInstancePrimaryAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-cpu_credit_balance:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstancePrimary
      MetricName: CPUCreditBalance
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Minimum
      Threshold: 10
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: missing
  LowCPUCreditBalanceDBInstanceReplicaAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:health-cpu_credit_balance:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceReplica
      MetricName: CPUCreditBalance
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Minimum
      Threshold: 10
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: missing
  HighReplicaLagAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:recovery-replica_lag:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstanceReplica
      MetricName: DBInstanceReplicaLag
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Maximum
      Threshold: 10000
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
  HighReplicaLagMaximumAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "docdb:alarm:recovery-cluster_replica_lag:2020-04-01"
      ActionsEnabled: false
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Ref DBCluster
      MetricName: DBClusterReplicaLagMaximum
      Namespace: AWS/DocDB
      Period: 60
      Statistic: Maximum
      Threshold: 10000
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
  DocumentDbConnectionAttemptCanary:
    Type: "AWS::Synthetics::Canary"
    Condition: CreateCanary
    Properties:
      Name: !Join
        - "-"
        - - "docdb-con"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      Code:
        Handler: "docdb_canary_connect.handler"
        S3Bucket:
          Ref: DocumentDbConnectionAttemptCanaryS3Bucket
        S3Key:
          Ref: DocumentDbConnectionAttemptCanaryS3Key
        S3ObjectVersion:
          Fn::If:
            - CanaryS3ObjectHasVersion
            - Ref: DocumentDbConnectionAttemptCanaryS3ObjectVersion
            - Ref: AWS::NoValue
      ExecutionRoleArn: !GetAtt RoleDocumentDbConnectionAttempt.Arn
      Schedule:
        Expression: "rate(1 minute)"
        DurationInSeconds: '0'
      RunConfig:
        TimeoutInSeconds: 60
        MemoryInMB: 960
        ActiveTracing: false
        EnvironmentVariables:
          SECRET_ID: !Sub '${GeneratedSecretString}'
          ENDPOINT: !GetAtt DBInstancePrimary.Endpoint
          PORT: !GetAtt DBInstancePrimary.Port
      SuccessRetentionPeriod: 5
      FailureRetentionPeriod: 5
      ArtifactS3Location:
        !Join [
            "",
          [
              "s3://",
              !Ref S3BucketForCanaryLogs,
              "/"
          ],
        ]
      RuntimeVersion: syn-python-selenium-1.0
      StartCanaryAfterCreation: false
      VPCConfig:
        SecurityGroupIds:
          - Ref: VPCSecurityGroup
        SubnetIds:
          - Ref: PrivateSubnet01
        VpcId: !Ref VPC
  DatabaseConnectionAttemptAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CreateCanary
    Properties:
      ActionsEnabled: false
      MetricName: "Failed"
      Namespace: "CloudWatchSynthetics"
      Statistic: "Sum"
      Dimensions:
        - Name: "CanaryName"
          Value: !Ref DocumentDbConnectionAttemptCanary
      Period: 10
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 0
      ComparisonOperator: "GreaterThanThreshold"
      TreatMissingData: "notBreaching"
  RoleDocumentDbConnectionAttempt:
    Type: AWS::IAM::Role
    Condition: CreateCanary
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
  PolicyDocumentDbConnectionAttempt:
    Type: AWS::IAM::Policy
    Condition: CreateCanary
    Properties:
      PolicyName: PolicyDocumentDbConnectionAttempt
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource: "*"
            Action:
              #              - todo leave only required
              - rds:Describe*
              - s3:*
              - secretsmanager:*
              - cloudwatch:PutMetricData
              - ec2:*
              - ec2:CreateNetworkInterface
      Roles:
        - Ref: RoleDocumentDbConnectionAttempt
  S3BucketForCanaryLogs:
    Type: AWS::S3::Bucket
    Condition: CreateCanary
    Properties:
      BucketName: !Join
        - "-"
        - - "canary-logs-digito"
          - !Ref "AWS::Region"
          - !Ref "AWS::AccountId"
          - !Select
            - 0
            - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  PrivateSubnet01RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: private-subnet-01-route-table
  PrivateSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnet01RouteTable
      SubnetId: !Ref PrivateSubnet01

  PublicSubnet01RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: public-subnet-01-route-table
  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnet01RouteTable
      SubnetId: !Ref PublicSubnet01

  NatGatewayEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet01
      Tags:
        - Key: Name
          Value: canary-nat-gw
  PrivateSubnet01RouteToNatGateway:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateSubnet01RouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGateway
  PublicSubnet01RouteTableToInernetGateway:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicSubnet01RouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: canary-igw
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  KmsKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: '2012-10-17'
        Id: !Join
          - "-"
          - - "kms-key-policy"
            - !Select
              - 0
              - !Split
                - "-"
                - !Select
                  - 2
                  - !Split
                    - "/"
                    - !Ref "AWS::StackId"
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: kms:*
            Resource: "*"