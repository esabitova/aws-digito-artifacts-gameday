#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
AWSTemplateFormatVersion: 2010-09-09
Description: "Sample KinesisDataAnalytics via CloudFormation"
Outputs:
  KinesisAnalyticsApplicationPhysicalResourceId:
    Description: Export application ApplicationPhysicalResourceId for outward reference
    Value: !Ref KinesisAnalyticsFlinkApplication
  InputKinesisAnalyticsStreamName:
    Description: Name of input stream, to populate with stream data
    Value: !Ref InputKinesisStream
  OutputKinesisAnalyticsStreamName:
    Description: Name of output stream, to extract processed stream data
    Value: !Ref OutputKinesisStream
  DowntimeAlarmName:
    Description: Kinesis Data Analytics alarm, based on Downtime metric, with Alarm status on missing data state.
    Value: !Ref DownTimeAlarm
  DownTimeNotBreachingAlarmName:
    Description: Kinesis Data Analytics alarm, based on Downtime metric, with TimedOut status on missing data state.
    Value: !Ref DownTimeNotBreachingAlarm
Parameters:
  S3FlinkCodeBucket:
    Type: String
    Description: S3 bucket with Kinesis Data Analytics for Apache Flink application python code import parameter
    Default: ""
  FlinkApplicationObjectKey:
    Type: String
    Description: Object key in s3 bucket for Apache Flink application file
    Default: ""
  KmsKey:
    Type: String
    Description: KMS encryption Key Arn
    Default: ""
Resources:
  KinesisAnalyticsFlinkApplication:
    Type: AWS::KinesisAnalyticsV2::Application
    Properties:
      RuntimeEnvironment: FLINK-1_11
      ServiceExecutionRole: !GetAtt KinesisAnalyticsRole.Arn
      ApplicationConfiguration:
        ApplicationCodeConfiguration:
          CodeContent:
            S3ContentLocation:
              BucketARN: !Sub "arn:aws:s3:::${S3FlinkCodeBucket}"
              FileKey: !Sub "${FlinkApplicationObjectKey}"
          CodeContentType: ZIPFILE
        EnvironmentProperties:
          PropertyGroups:
            - PropertyGroupId: kinesis.analytics.flink.run.options
              PropertyMap:
                python: !Join ["/", [!Select [1, !Split ["/", !Select [0, !Split [".", !Sub "${FlinkApplicationObjectKey}"]]]], "main.py"]]
                jarfile: !Join ["/", [!Select [1, !Split ["/", !Select [0, !Split [".", !Sub "${FlinkApplicationObjectKey}"]]]], "lib", "amazon-kinesis-sql-connector-flink-2.0.3.jar"]]
            - PropertyGroupId: producer.config.0
              PropertyMap:
                output.stream.name: !Ref OutputKinesisStream
                aws.region: !Sub "${AWS::Region}"
                shard.count: "1"
            - PropertyGroupId: consumer.config.0
              PropertyMap:
                input.stream.name: !Ref InputKinesisStream
                aws.region: !Sub "${AWS::Region}"
                flink.stream.initpos: "LATEST"
        ApplicationSnapshotConfiguration:
          SnapshotsEnabled: true
        FlinkApplicationConfiguration:
          CheckpointConfiguration:
            ConfigurationType: CUSTOM
            CheckpointingEnabled: true
            CheckpointInterval: 60000
            MinPauseBetweenCheckpoints: 5000
          ParallelismConfiguration:
            ConfigurationType: CUSTOM
            AutoScalingEnabled: true
            Parallelism: 1
            ParallelismPerKPU: 2
  KinesisAnalyticsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: kinesisanalytics.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:        
        - PolicyName: !Join
            - "-"
            - - "policy-digito-kinesis-application-s3-with-code"
              - !Select
                - 0
                - !Split
                  - "-"
                  - !Select
                    - 2
                    - !Split
                      - "/"
                      - !Ref "AWS::StackId"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
                Sid: readcode 
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource:
                  - !Sub "arn:aws:s3:::${S3FlinkCodeBucket}"
                  - !Join ['/' , [!Sub "arn:aws:s3:::${S3FlinkCodeBucket}", !Sub "${FlinkApplicationObjectKey}"]]
        - PolicyName: !Join
            - "-"
            - - "policy-digito-kinesis-application-cloudwatch-describe-log-group"
              - !Select
                - 0
                - !Split
                  - "-"
                  - !Select
                    - 2
                    - !Split
                      - "/"
                      - !Ref "AWS::StackId"
          PolicyDocument:
              Version: '2012-10-17'
              Statement:
                Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:PutDestination
                Resource:
                  !Join
                    - ''
                    - - 'arn:aws:logs:'
                      - !Ref AWS::Region
                      - ':'
                      - !Ref AWS::AccountId
                      - ':log-group:*'       
        - PolicyName: !Join
            - "-"
            - - "policy-digito-kinesis-application-access-stream"
              - !Select
                - 0
                - !Split
                  - "-"
                  - !Select
                    - 2
                    - !Split
                      - "/"
                      - !Ref "AWS::StackId"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: kinesisdatastreamssid           
                Effect: Allow
                Action:
                  - kinesis:DescribeStream
                  - kinesis:GetShardIterator
                  - kinesis:GetRecords
                  - kinesis:GetShardIterator
                  - kinesis:ListShards
                  - kinesis:DescribeStreamSummary
                  - kinesis:DescribeStreamConsumer
                  - kinesis:SubscribeToShard
                  - kinesis:RegisterStreamConsumer
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                  - kinesis:ListStreams                
                Resource:
                  - !GetAtt 'InputKinesisStream.Arn'
                  - !GetAtt 'OutputKinesisStream.Arn'
              - Sid: kinesisdataanalyticsapp  
                Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt*
                  - kms:GenerateDataKey*
                  - kms:DescribeKey
                Resource: !Sub '${KmsKey}'
  InputKinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      ShardCount: 1
      StreamEncryption:
        EncryptionType: KMS
        KeyId: !Sub '${KmsKey}'
  OutputKinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      ShardCount: 1
      StreamEncryption:
        EncryptionType: KMS
        KeyId: !Sub '${KmsKey}'
  
  DownTimeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: false
      AlarmDescription: 'Digito alarm for Apache Flink job that measures the time elapsed while a job is failing, missing data are treated as breaching'
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Dimensions:
        - Name: Application
          Value: !Ref KinesisAnalyticsFlinkApplication
      Namespace: AWS/KinesisAnalytics
      MetricName: downtime
      Period: 60
      Statistic: Maximum
      Threshold: 0
      TreatMissingData: breaching
  
  DownTimeNotBreachingAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: false
      AlarmDescription: 'Digito alarm for Apache Flink job that measures the time elapsed while a job is failing, missing data are treated as missing'
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Dimensions:
        - Name: Application
          Value: !Ref KinesisAnalyticsFlinkApplication
      Namespace: AWS/KinesisAnalytics
      MetricName: downtime
      Period: 60
      Statistic: Maximum
      Threshold: 0
      TreatMissingData: notBreaching