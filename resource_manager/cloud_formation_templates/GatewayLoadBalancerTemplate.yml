#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
AWSTemplateFormatVersion: 2010-09-09
Description: Test stack for gateway load-balancer
Outputs:
  GatewayELB:
    Description: Gateway Load Balancer ARN
    Value: !Ref  GatewayELB
#  GatewayELBUrl:
#    Description: The Gateway Elastic Load Balancer DNS Name
#    Value: !GetAtt GatewayELB.DNSName
  GatewayELBFullName:
    Description: The Gateway Elastic Load Balancer Key For Alarm Setup
    Value: !GetAtt GatewayELB.LoadBalancerFullName
Parameters:
  VPCCidr:
    Type: String
    Description: VPC cidr block
    Default: 10.0.0.0/16
  # add required parameters here
Resources:
  GLBVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: GLBVPC

  GLBPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref GLBVPC
      CidrBlock: !Select
        - 1
        - !Cidr
          - !Ref VPCCidr
          - 2
          - 8
      Tags:
        - Key: Name
          Value: GLBPrivateSubnet
  GatewayELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: ipv4
      SubnetMappings: 
        - SubnetId: !Ref GLBPrivateSubnet
      Type: gateway

  GLBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckPort: "80"
      HealthCheckProtocol: TCP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      Port: 80
      Protocol: TCP
      TargetGroupAttributes: 
        - Key: stickiness.enabled
          Value: "true"
      # Targets: 
      #   - TargetDescription
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId: !Ref GLBVPC